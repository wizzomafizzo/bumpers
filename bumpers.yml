session:
  - add: "Today's date is: {{.Today}}"

commands:
  - name: test
    send: 'Run "just test" to run all tests and fix ALL failing tests if any.'
  - name: lint
    send: 'Run "just lint fix" and fix ALL linting issues if any.'
  - name: check
    send: 'Run "just lint fix" and "just test" and fix ALL issues if any.'
  - name: commit
    send: "Commit ALL modified files."
  - name: logs
    send: "Read log file in ~/.local/share/bumpers/bumpers.log"
  - name: branch
    send: "Create a new feature branch before proceeding with changes."
  
  # Examples of commands with argument support
  - name: search
    send: |
      Search for "{{argv 1}}" in the codebase{{if gt (argc) 1}} in {{argv 2}} directory{{end}}:
      {{if eq (argc) 0}}Please provide a search term: $search "term"
      {{else if eq (argc) 1}}grep -r "{{argv 1}}" ./
      {{else}}grep -r "{{argv 1}}" {{argv 2}}/{{end}}
  - name: create
    send: |
      {{if lt (argc) 2}}Usage: $create <type> <name> [description]
      Examples:
      - $create file myfile.go "New Go file"  
      - $create dir mypackage "Package directory"
      {{else}}Create {{argv 1}}: {{argv 2}}{{if gt (argc) 2}} - {{argv 3}}{{end}}
      {{if eq (argv 1) "file"}}touch "{{argv 2}}"
      {{else if eq (argv 1) "dir"}}mkdir -p "{{argv 2}}"
      {{else}}# Unknown type: {{argv 1}}{{end}}{{end}}
  - name: note  
    send: |
      {{if eq (argc) 0}}Add a note about current work to the session log.
      {{else}}Note ({{argc}} args): {{.Args}}{{end}}

rules:
  - match: " /tmp"
    send: Use a "tmp" directory in the project root instead.
  - match: "go test "
    send: |
      Use "just test" instead for TDD integration:
      just test                               # Run all test categories (unit, integration, e2e)
      just test-unit                          # Run only unit tests
      just test-integration                   # Run only integration tests
      just test-e2e                           # Run only e2e tests
      just test-unit ./internal/claude        # Test specific package (unit tests only)
      just test-integration -run TestExample  # Run specific test pattern (integration)
      just test-unit -v ./internal/claude     # Verbose output for specific package
      just test-e2e -race=false ./...         # Disable race detection for e2e tests
  - match: "^(gci|go vet|goimports|gofumpt|go *fmt|golangci-lint)"
    send: Use "just lint fix" instead to resolve lint/formatting issues.
  - match: "git commit --no-verify|LEFTHOOK=0"
    send: Pre-commit hooks must not be skipped.
  - match: "fieldalignment"
    send: Fix field alignment issues by adding names to struct fields and running "just lint fix".
  - match: 'find\s+.*-exec\s+(rm(\s+-\w+)*|sed\s+-i|>\s*\S+)\s+'
    send: Don't use dangerous exec in find commands.
  - match: "BUMPERS_SKIP=1"
    send: Bumpers should not be skipped.
  - match: "^bumpers\\.yml^"
    tool: "Read|Edit|Grep"
    send: Bumpers configuration file should not be accessed.
  - match: "cat.*EOF"
    send: Only use appropriate tools for creating/editing files.
